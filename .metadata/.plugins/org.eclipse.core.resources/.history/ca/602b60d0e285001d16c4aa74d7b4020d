package com.qms.auth.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import com.qms.auth.service.authSevice;


public class authConfig extends WebSecurityConfigurerAdapter{

		@Autowired
		private authSevice aSevice;
		
		@Override
		protected void configure(HttpSecurity http) throws Exception {
			
			http
					.csrf().disable()
					.authorizeRequests()
					.antMatchers("/signin").permitAll()
					.antMatchers("/home","/users/{userId}").hasRole("NORMAL")
					.antMatchers("/home","/users/**").hasRole("ADMIN")
					.anyRequest()
					.authenticated()
					.and()
//					.httpBasic();
					.formLogin()
					.loginPage("/signin")
					.loginProcessingUrl("/dologin")
					.defaultSuccessUrl("/home");
			
		}

//		@Override
//		protected void configure(AuthenticationManagerBuilder auth) throws Exception {
//			auth.inMemoryAuthentication().withUser("normal").password(this.passwordEncoder().encode("abc@123")).roles("NORMAL");
//			auth.inMemoryAuthentication().withUser("admin").password(this.passwordEncoder().encode("xyz@123")).roles("ADMIN");
//			auth.userDetailsService(customUserDetailService).passwordEncoder(passwordEncoder()) ;
//		
//		
//		}
		
		@Bean
		public BCryptPasswordEncoder passwordEncoder() {
			return new BCryptPasswordEncoder(10);
		}
		
		
		

	}



