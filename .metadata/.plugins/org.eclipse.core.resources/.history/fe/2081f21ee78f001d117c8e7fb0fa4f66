package com.qms.auth.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.neo4j.Neo4jProperties.Authentication;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.qms.auth.dto.SignInRequest;
import com.qms.auth.dto.SignUpRequest;
import com.qms.auth.service.UserService;

@RestController
@RequestMapping("/api/auth")
public class AuthController {
	
	@Autowired 
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private JwtU

	@GetMapping("/signIn")
	public ResponseEntity<?> signIn(@RequestBody SignInRequest signInRequest) {
		Authentication authentication = (Authentication) authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(signInRequest.getEmailId(),signInRequest.getPassword()));
		
		SecurityContextHolder.getContext().setAuthentication((org.springframework.security.core.Authentication) authentication);
		String jwt = jwtUtils.generateJwtToken(authentication);
		
		return userService.signIn(signInRequest);
	}
	
	@PostMapping("/register")
	public ResponseEntity<?> register(@RequestBody SignUpRequest request) {
		return userService.register(request);
	}

}
